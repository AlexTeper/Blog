@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options

@model string
@inject IDateTimeService DateTimeService
@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .ToList();
}

<h3>User settings</h3>
<form asp-controller="Account" asp-action="Settings" method="post">
    <label>TimeZones</label>
    <select name="timeZoneId">
        @foreach (var timezone in DateTimeService.GetAvailableTimeZones())
        {
            @if (timezone.Id == Model)
            {
                <option value="@timezone.Id" selected>@timezone.DisplayName</option>
            }
            else
            {
                <option value="@timezone.Id">@timezone.DisplayName</option>
            }

        }
    </select>
    <button class="btn btn-primary">Save Changes</button>
</form>

<div title="@Localizer["Request culture provider:"] @requestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage" class="form-horizontal" asp-controller="Account" asp-action="SetLanguage" asp-route-user="@User.Identity" method="post" role="form">
        <div class="form-group">
            <label asp-for="@requestCulture.RequestCulture.UICulture.Name">@Localizer["Language"]</label>
            <select name="culture" onchange="this.form.submit();" asp-for="@requestCulture.RequestCulture.UICulture.Name"
                    asp-items="cultureItems" class="form-control" title="@Localizer["Select a language"]"></select>
        </div>
    </form>
</div>